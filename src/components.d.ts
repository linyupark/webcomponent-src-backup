/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface NbActionsheet {
    /**
    * 关闭显示
    */
    'close': () => void;
    /**
    * 展示标题内容 （不用title避免跟原生属性冲突）
    */
    'headTitle'?: string;
    /**
    * 是否需要遮罩 0 不需要，其他数字代表透明度
    */
    'mask': number;
    /**
    * 显示
    */
    'show': () => void;
  }
  interface NbActionsheetAttributes extends StencilHTMLAttributes {
    /**
    * 展示标题内容 （不用title避免跟原生属性冲突）
    */
    'headTitle'?: string;
    /**
    * 是否需要遮罩 0 不需要，其他数字代表透明度
    */
    'mask'?: number;
  }

  interface NbAffix {
    'getStartFixedScrollTop': () => Promise<number>;
    /**
    * 直接返回是否处于固定状态
    */
    'isFixed': () => Promise<boolean>;
    /**
    * 距离偏移量后触发（正数举例上沿，负数下沿）
    */
    'offset': number;
    /**
    * 计算举例的参照dom
    */
    'relativeSelector'?: string;
    /**
    * 固定时候zindex值
    */
    'zIndex': number;
  }
  interface NbAffixAttributes extends StencilHTMLAttributes {
    /**
    * 距离偏移量后触发（正数举例上沿，负数下沿）
    */
    'offset'?: number;
    /**
    * 当固定状态发生变化对外发送事件
    */
    'onChange'?: (event: CustomEvent) => void;
    /**
    * 计算举例的参照dom
    */
    'relativeSelector'?: string;
    /**
    * 固定时候zindex值
    */
    'zIndex'?: number;
  }

  interface NbBadge {
    /**
    * 徽标底色
    */
    'bgColor': string;
    /**
    * 展示数字，0为隐藏
    */
    'count': number;
    /**
    * 不展示数字，显示点
    */
    'dot': boolean;
    /**
    * count的封顶数值超出则显示 maxCount+
    */
    'maxCount': number;
    /**
    * 位置偏移量
    */
    'offset': number;
    /**
    * 当count为0的时候也显示
    */
    'showZero': boolean;
  }
  interface NbBadgeAttributes extends StencilHTMLAttributes {
    /**
    * 徽标底色
    */
    'bgColor'?: string;
    /**
    * 展示数字，0为隐藏
    */
    'count'?: number;
    /**
    * 不展示数字，显示点
    */
    'dot'?: boolean;
    /**
    * count的封顶数值超出则显示 maxCount+
    */
    'maxCount'?: number;
    /**
    * 位置偏移量
    */
    'offset'?: number;
    /**
    * 当count为0的时候也显示
    */
    'showZero'?: boolean;
  }

  interface NbListItem {
    /**
    * 下边框, 0则不显示
    */
    'border': number;
    /**
    * 线条颜色
    */
    'color': string;
    /**
    * 设置单元高度
    */
    'height'?: number;
    /**
    * 短线条方向
    */
    'short'?: 'left' | 'right' | 'both';
    /**
    * 设置横线左右间距
    */
    'sideSpace'?: number;
    /**
    * 是否启用横滑操作开关
    */
    'slide': boolean;
  }
  interface NbListItemAttributes extends StencilHTMLAttributes {
    /**
    * 下边框, 0则不显示
    */
    'border'?: number;
    /**
    * 线条颜色
    */
    'color'?: string;
    /**
    * 设置单元高度
    */
    'height'?: number;
    /**
    * 短线条方向
    */
    'short'?: 'left' | 'right' | 'both';
    /**
    * 设置横线左右间距
    */
    'sideSpace'?: number;
    /**
    * 是否启用横滑操作开关
    */
    'slide'?: boolean;
  }

  interface NbList {
    /**
    * List之间的间距
    */
    'topSpace'?: number;
  }
  interface NbListAttributes extends StencilHTMLAttributes {
    /**
    * List之间的间距
    */
    'topSpace'?: number;
  }

  interface NbMarquee {
    /**
    * 跑动内容列表
    */
    'items'?: {
      key: number,
      text: string,
      time?: string,
      link: string
    }[];
    /**
    * 多少间隔动一次
    */
    'speed': number;
    /**
    * 跑马灯预设样式
    */
    'styleId': 'tow-row-66h';
  }
  interface NbMarqueeAttributes extends StencilHTMLAttributes {
    /**
    * 跑动内容列表
    */
    'items'?: {
      key: number,
      text: string,
      time?: string,
      link: string
    }[];
    /**
    * 多少间隔动一次
    */
    'speed'?: number;
    /**
    * 跑马灯预设样式
    */
    'styleId'?: 'tow-row-66h';
  }

  interface NbRefresh {
    /**
    * 自动执行一次上拉加载
    */
    'autoScrollLoad': boolean;
    /**
    * 获取 refresh 实例化对象
    */
    'getRefresh': () => Promise<any>;
    /**
    * 禁用下拉刷新
    */
    'lockRefresh': boolean;
    /**
    * 禁用上拉加载更多
    */
    'lockScrollLoad': boolean;
    /**
    * 上下拉动的阀值
    */
    'offset': number;
    /**
    * 下拉刷新文案方面的配置 参数	参数类型	默认值	说明 isWrapCssTranslate	Boolean	false	是否下拉时wrap（下拉区域不是内容区域，与scroll区分开）会跟随css translate contentdown	String	'下拉刷新'	下拉刷新默认提示 contentover	String	'释放刷新'	在超过阈值后的提示 contentrefresh	String	'加载中...'	正在刷新中的提示 contentsuccess	String	'刷新成功'	刷新成功后，结束前，成功状态的提示 contenterror	String	'刷新失败'	刷新成功后，结束前，失败状态的提示
    */
    'refreshOptions': object;
    /**
    * 下拉刷新文案方面的配置 参数	参数类型	默认值	说明 contentdown	String	'上拉显示更多'	上拉加载默认提示，一般默认情况会隐藏用不到它 contentrefresh	String	'加载中...'	上拉加载时的提示 contentnomore	String	'没有更多数据了'	没有更多数据时的提示 toTop	Object	默认配置	滚动到顶部的相关配置，图片的话请在css中修改 toTop.isEnable	Boolean	true	是否开启自动滚动到顶部 toTop.duration	Number	300	滚动到顶部的过渡时间 toTop.offset	Number	800	阈值，滚动超过多少距离后才会显示滚动到顶部按钮
    */
    'scrollLoadOptions': object;
  }
  interface NbRefreshAttributes extends StencilHTMLAttributes {
    /**
    * 自动执行一次上拉加载
    */
    'autoScrollLoad'?: boolean;
    /**
    * 禁用下拉刷新
    */
    'lockRefresh'?: boolean;
    /**
    * 禁用上拉加载更多
    */
    'lockScrollLoad'?: boolean;
    /**
    * 上下拉动的阀值
    */
    'offset'?: number;
    /**
    * 下拉刷新事件
    */
    'onRefresh'?: (event: CustomEvent) => void;
    /**
    * 上拉加载事件
    */
    'onScrollLoad'?: (event: CustomEvent) => void;
    /**
    * 下拉刷新文案方面的配置 参数	参数类型	默认值	说明 isWrapCssTranslate	Boolean	false	是否下拉时wrap（下拉区域不是内容区域，与scroll区分开）会跟随css translate contentdown	String	'下拉刷新'	下拉刷新默认提示 contentover	String	'释放刷新'	在超过阈值后的提示 contentrefresh	String	'加载中...'	正在刷新中的提示 contentsuccess	String	'刷新成功'	刷新成功后，结束前，成功状态的提示 contenterror	String	'刷新失败'	刷新成功后，结束前，失败状态的提示
    */
    'refreshOptions'?: object;
    /**
    * 下拉刷新文案方面的配置 参数	参数类型	默认值	说明 contentdown	String	'上拉显示更多'	上拉加载默认提示，一般默认情况会隐藏用不到它 contentrefresh	String	'加载中...'	上拉加载时的提示 contentnomore	String	'没有更多数据了'	没有更多数据时的提示 toTop	Object	默认配置	滚动到顶部的相关配置，图片的话请在css中修改 toTop.isEnable	Boolean	true	是否开启自动滚动到顶部 toTop.duration	Number	300	滚动到顶部的过渡时间 toTop.offset	Number	800	阈值，滚动超过多少距离后才会显示滚动到顶部按钮
    */
    'scrollLoadOptions'?: object;
  }

  interface NbModal {
    /**
    * 标题（不填则去掉头部区域）
    */
    'headTitle'?: string;
    /**
    * 当弹窗类型是 confirm 时取消按钮文案
    */
    'noText': string;
    /**
    * 当弹窗类型是 alert, confirm 时确认按钮文案
    */
    'okText': string;
    /**
    * 点击取消按钮对应的操作
    */
    'onNo': Function;
    /**
    * 点击确认按钮对应的操作
    */
    'onOk': Function;
    /**
    * 显示位置
    */
    'position': 'center';
    /**
    * 显示
    */
    'show': (type: any, opts?: {}) => Promise<any>;
    /**
    * 样式定义
    */
    'theme': string;
    /**
    * 弹窗类型
    */
    'type': 'alert' | 'confirm';
    /**
    * 可见开关
    */
    'visible': boolean;
  }
  interface NbModalAttributes extends StencilHTMLAttributes {
    /**
    * 标题（不填则去掉头部区域）
    */
    'headTitle'?: string;
    /**
    * 当弹窗类型是 confirm 时取消按钮文案
    */
    'noText'?: string;
    /**
    * 当弹窗类型是 alert, confirm 时确认按钮文案
    */
    'okText'?: string;
    /**
    * 点击取消按钮对应的操作
    */
    'onNo'?: Function;
    /**
    * 点击确认按钮对应的操作
    */
    'onOk'?: Function;
    /**
    * 显示位置
    */
    'position'?: 'center';
    /**
    * 样式定义
    */
    'theme'?: string;
    /**
    * 弹窗类型
    */
    'type'?: 'alert' | 'confirm';
    /**
    * 可见开关
    */
    'visible'?: boolean;
  }

  interface NbSearchBar {
    /**
    * 取消搜索操作
    */
    'cancelSearch': () => Promise<boolean>;
    /**
    * 取消操作文案
    */
    'cancelText': string;
    /**
    * 输入框最大长度限制
    */
    'maxLength': number;
    /**
    * 搜索框内的提示文案
    */
    'placeholder': string;
    /**
    * 清除搜索框内容
    */
    'removeValue': () => Promise<boolean>;
    /**
    * 搜索触发延迟
    */
    'searchDelay': number;
    /**
    * 提交搜索框内容
    */
    'submitForm': (ev: any) => Promise<this>;
    /**
    * 输入框内的值（可变化反射）
    */
    'value': string;
  }
  interface NbSearchBarAttributes extends StencilHTMLAttributes {
    /**
    * 取消操作文案
    */
    'cancelText'?: string;
    /**
    * 输入框最大长度限制
    */
    'maxLength'?: number;
    /**
    * 当输入框发生变动时
    */
    'onFocusChange'?: (event: CustomEvent) => void;
    /**
    * 当输入框发生变动时
    */
    'onSearch'?: (event: CustomEvent) => void;
    /**
    * 当发生提交操作时
    */
    'onSubmit'?: (event: CustomEvent) => void;
    /**
    * 搜索框内的提示文案
    */
    'placeholder'?: string;
    /**
    * 搜索触发延迟
    */
    'searchDelay'?: number;
    /**
    * 输入框内的值（可变化反射）
    */
    'value'?: string;
  }

  interface NbSwitch {
    /**
    * 是否默认选中
    */
    'checked': boolean;
    /**
    * 开关背景颜色
    */
    'color': string;
    /**
    * 是否不可修改
    */
    'disabled': boolean;
    /**
    * 高度
    */
    'h': number;
    /**
    * 宽度
    */
    'w': number;
  }
  interface NbSwitchAttributes extends StencilHTMLAttributes {
    /**
    * 是否默认选中
    */
    'checked'?: boolean;
    /**
    * 开关背景颜色
    */
    'color'?: string;
    /**
    * 是否不可修改
    */
    'disabled'?: boolean;
    /**
    * 高度
    */
    'h'?: number;
    /**
    * 当状态发生改变
    */
    'onChange'?: (event: CustomEvent) => void;
    /**
    * 宽度
    */
    'w'?: number;
  }

  interface NbToast {
    /**
    * 消失延时时间 0 -> 不自动消失
    */
    'duration': number;
    /**
    * 最大显示宽度
    */
    'maxLength': number;
    /**
    * 显示位置
    */
    'position': 'center';
    /**
    * 显示
    */
    'show': (message?: string) => Promise<any>;
    /**
    * 样式定义
    */
    'theme': string;
    /**
    * 可见开关
    */
    'visible': boolean;
  }
  interface NbToastAttributes extends StencilHTMLAttributes {
    /**
    * 消失延时时间 0 -> 不自动消失
    */
    'duration'?: number;
    /**
    * 最大显示宽度
    */
    'maxLength'?: number;
    /**
    * 显示位置
    */
    'position'?: 'center';
    /**
    * 样式定义
    */
    'theme'?: string;
    /**
    * 可见开关
    */
    'visible'?: boolean;
  }

  interface NbVscrollNav {
    /**
    * 定义滚动元素 id 的前置与选中的keyword 合并成完整的 id eg：'vscroll-' + 'A' -> id='vscroll-A'
    */
    'idPrefix': string;
    /**
    * 可用于导航滑动的关键字数组
    */
    'keywords': string[];
    /**
    * 滚动列表到指定id位置
    */
    'scrollToId': (id: string) => Promise<any>;
    /**
    * 包裹可滚动的容器，不填写的话默认为window级别滚动
    */
    'scroller'?: string;
  }
  interface NbVscrollNavAttributes extends StencilHTMLAttributes {
    /**
    * 定义滚动元素 id 的前置与选中的keyword 合并成完整的 id eg：'vscroll-' + 'A' -> id='vscroll-A'
    */
    'idPrefix'?: string;
    /**
    * 可用于导航滑动的关键字数组
    */
    'keywords'?: string[];
    /**
    * 触发滚动
    */
    'onScrollTo'?: (event: CustomEvent) => void;
    /**
    * 包裹可滚动的容器，不填写的话默认为window级别滚动
    */
    'scroller'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'NbActionsheet': Components.NbActionsheet;
    'NbAffix': Components.NbAffix;
    'NbBadge': Components.NbBadge;
    'NbListItem': Components.NbListItem;
    'NbList': Components.NbList;
    'NbMarquee': Components.NbMarquee;
    'NbRefresh': Components.NbRefresh;
    'NbModal': Components.NbModal;
    'NbSearchBar': Components.NbSearchBar;
    'NbSwitch': Components.NbSwitch;
    'NbToast': Components.NbToast;
    'NbVscrollNav': Components.NbVscrollNav;
  }

  interface StencilIntrinsicElements {
    'nb-actionsheet': Components.NbActionsheetAttributes;
    'nb-affix': Components.NbAffixAttributes;
    'nb-badge': Components.NbBadgeAttributes;
    'nb-list-item': Components.NbListItemAttributes;
    'nb-list': Components.NbListAttributes;
    'nb-marquee': Components.NbMarqueeAttributes;
    'nb-refresh': Components.NbRefreshAttributes;
    'nb-modal': Components.NbModalAttributes;
    'nb-search-bar': Components.NbSearchBarAttributes;
    'nb-switch': Components.NbSwitchAttributes;
    'nb-toast': Components.NbToastAttributes;
    'nb-vscroll-nav': Components.NbVscrollNavAttributes;
  }


  interface HTMLNbActionsheetElement extends Components.NbActionsheet, HTMLStencilElement {}
  var HTMLNbActionsheetElement: {
    prototype: HTMLNbActionsheetElement;
    new (): HTMLNbActionsheetElement;
  };

  interface HTMLNbAffixElement extends Components.NbAffix, HTMLStencilElement {}
  var HTMLNbAffixElement: {
    prototype: HTMLNbAffixElement;
    new (): HTMLNbAffixElement;
  };

  interface HTMLNbBadgeElement extends Components.NbBadge, HTMLStencilElement {}
  var HTMLNbBadgeElement: {
    prototype: HTMLNbBadgeElement;
    new (): HTMLNbBadgeElement;
  };

  interface HTMLNbListItemElement extends Components.NbListItem, HTMLStencilElement {}
  var HTMLNbListItemElement: {
    prototype: HTMLNbListItemElement;
    new (): HTMLNbListItemElement;
  };

  interface HTMLNbListElement extends Components.NbList, HTMLStencilElement {}
  var HTMLNbListElement: {
    prototype: HTMLNbListElement;
    new (): HTMLNbListElement;
  };

  interface HTMLNbMarqueeElement extends Components.NbMarquee, HTMLStencilElement {}
  var HTMLNbMarqueeElement: {
    prototype: HTMLNbMarqueeElement;
    new (): HTMLNbMarqueeElement;
  };

  interface HTMLNbRefreshElement extends Components.NbRefresh, HTMLStencilElement {}
  var HTMLNbRefreshElement: {
    prototype: HTMLNbRefreshElement;
    new (): HTMLNbRefreshElement;
  };

  interface HTMLNbModalElement extends Components.NbModal, HTMLStencilElement {}
  var HTMLNbModalElement: {
    prototype: HTMLNbModalElement;
    new (): HTMLNbModalElement;
  };

  interface HTMLNbSearchBarElement extends Components.NbSearchBar, HTMLStencilElement {}
  var HTMLNbSearchBarElement: {
    prototype: HTMLNbSearchBarElement;
    new (): HTMLNbSearchBarElement;
  };

  interface HTMLNbSwitchElement extends Components.NbSwitch, HTMLStencilElement {}
  var HTMLNbSwitchElement: {
    prototype: HTMLNbSwitchElement;
    new (): HTMLNbSwitchElement;
  };

  interface HTMLNbToastElement extends Components.NbToast, HTMLStencilElement {}
  var HTMLNbToastElement: {
    prototype: HTMLNbToastElement;
    new (): HTMLNbToastElement;
  };

  interface HTMLNbVscrollNavElement extends Components.NbVscrollNav, HTMLStencilElement {}
  var HTMLNbVscrollNavElement: {
    prototype: HTMLNbVscrollNavElement;
    new (): HTMLNbVscrollNavElement;
  };

  interface HTMLElementTagNameMap {
    'nb-actionsheet': HTMLNbActionsheetElement
    'nb-affix': HTMLNbAffixElement
    'nb-badge': HTMLNbBadgeElement
    'nb-list-item': HTMLNbListItemElement
    'nb-list': HTMLNbListElement
    'nb-marquee': HTMLNbMarqueeElement
    'nb-refresh': HTMLNbRefreshElement
    'nb-modal': HTMLNbModalElement
    'nb-search-bar': HTMLNbSearchBarElement
    'nb-switch': HTMLNbSwitchElement
    'nb-toast': HTMLNbToastElement
    'nb-vscroll-nav': HTMLNbVscrollNavElement
  }

  interface ElementTagNameMap {
    'nb-actionsheet': HTMLNbActionsheetElement;
    'nb-affix': HTMLNbAffixElement;
    'nb-badge': HTMLNbBadgeElement;
    'nb-list-item': HTMLNbListItemElement;
    'nb-list': HTMLNbListElement;
    'nb-marquee': HTMLNbMarqueeElement;
    'nb-refresh': HTMLNbRefreshElement;
    'nb-modal': HTMLNbModalElement;
    'nb-search-bar': HTMLNbSearchBarElement;
    'nb-switch': HTMLNbSwitchElement;
    'nb-toast': HTMLNbToastElement;
    'nb-vscroll-nav': HTMLNbVscrollNavElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
